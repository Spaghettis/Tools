#N canvas 695 355 419 372 12;
#X obj 12 12 cnv 15 275 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 24 24 scalars;
#N canvas 322 406 319 208 foo 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 108 pd foo;
#X text 12 72 An empty subpatch.;
#X text 12 144 Define a template (and appearance of its instances).;
#X f 53;
#N canvas 645 107 349 257 init 0;
#X obj 36 24 inlet;
#X obj 36 60 t b b;
#X obj 204 180 pointer;
#X obj 36 204 append widget x y z q;
#X msg 36 108 50 100 30 0 \, 200 100 -30 800;
#X msg 204 156 clear foo \, bang;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 1 5 0;
#X connect 2 0 3 4;
#X connect 4 0 3 0;
#X connect 5 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 288 pd init;
#N canvas 682 187 660 348 bar 0;
#X obj 36 48 struct widget float x float y float z float q;
#X obj 36 228 tgl 15 1 empty empty empty 17 7 0 10 #ffffff #000000 #000000 1 1;
#X obj 36 120 tgl 15 1 empty empty empty 17 7 0 10 #ffffff #000000 #000000 1 1;
#X text 12 192 Arguments q and z are variables referring to the fields of the instance to draw.;
#X f 80;
#X text 12 300 Notice that only the painters located in the template's patch are used while rendering.;
#X f 87;
#X text 12 12 Add a template (e.g. widget) \, with four numbers as fields (x \, y \, z and q).;
#X f 76;
#X text 12 84 Its name must be unique. You can have as many painters (as below) that you want.;
#X f 81;
#X obj 36 156 draw text -x 50 -y -8 -color q -- z;
#X obj 36 264 draw polygon -fill -fillcolor q -color q -width 3 -- 0 0 20 z 40 0;
#X f 66;
#X connect 1 0 8 0;
#X connect 2 0 7 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 180 pd bar;
#X obj 36 252 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X text 12 216 Create two instances (scalars) of that template.;
#X text 12 324 Play with them using the mouse (in run and edit mode).;
#X connect 7 0 5 0;
#X coords 0 0 1 1 250 175 0 0 0;
